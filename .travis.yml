language: python

cache: pip

jobs:
  include:
    - name: "Tests on python 3.6 (Clinical-db)"
      if: type = pull_request
      python: "3.6.2"   # version in prod170926
      install: pip install . -r requirements-dev.txt
      script: pytest

    - name: "Tests on python 3.7 (Hasta)"
      if: type = pull_request
      python: "3.7.1"   # version in P_main
      install: pip install . -r requirements-dev.txt
      script: pytest

    - name: "Package install"
      if: type = pull_request
      install: python setup.py install
      script: true

    - name: "Production dependencies on python 3.6 (Clinical-db)"
      if: type = pull_request
      python: "3.6.2"             # version in prod170926
      install:
        - pip install pip==9.0.1  # pip version in prod170926
        - pip install cython
        - pip install .
      script: pip check

    - name: "Production dependencies on python 3.7 (Hasta)"
      if: type = pull_request
      python: "3.7.1"           # version in P_main
      install:
        - pip install pip==18.1  # pip version in P_main
        - pip install cython
        - pip install .
      script: pip check

    - name: "Development dependencies"
      if: type = pull_request
      install:
        - pip install cython
        - pip install . -r requirements-dev.txt
      script: pip check

    - name: "Coverage"
      if: NOT type = pull_request
      install:
        - pip install cython
        - pip install . -r requirements-dev.txt
      script: coverage run --branch --omit="*.html" --source "$(basename "$PWD")" setup.py test
      after_success: coveralls

    - name: "Code formatting"
      if: type = pull_request
      install: pip install black
      script: git --no-pager diff --name-only --diff-filter=AM $TRAVIS_COMMIT_RANGE | grep -F ".py" | xargs black --check

    - name: "Pylint score"
      if: type = pull_request
      install: pip install pylint
      script:
        - grep -r -E "pylint. {0,1}disable\=" .; if [ $? -eq 0 ]; then echo "Can not run pylint scoring with any pylint warnings disabled, please remove them and try again" && false; else true; fi
        - (git --no-pager diff --name-only --diff-filter=M $TRAVIS_COMMIT_RANGE | grep -F ".py" || echo "$(basename "$PWD")") > $TRAVIS_HOME/before_files.txt
        - (git --no-pager diff --name-only --diff-filter=AM $TRAVIS_COMMIT_RANGE | grep -F ".py" || echo "$(basename "$PWD")") > $TRAVIS_HOME/after_files.txt
        - pylint --rcfile=.configs/pylintrc --jobs=0 --exit-zero $(< $TRAVIS_HOME/after_files.txt) > $TRAVIS_HOME/pylint_after_output.txt
        - git checkout $TRAVIS_BRANCH
        - pylint --rcfile=.configs/pylintrc --jobs=0 --exit-zero $(< $TRAVIS_HOME/before_files.txt) > $TRAVIS_HOME/pylint_before_output.txt
        - >-
          grep -F "/10, -" $TRAVIS_HOME/pylint_before_output.txt ||
          grep -F "/10, +0.00" $TRAVIS_HOME/pylint_before_output.txt ||
          (echo "pylint score decreased, please try again after fixing some lint issues." && cat $TRAVIS_HOME/pylint_after_output.txt && false)

    - name: "Linting"
      if: type = pull_request
      install: pip install -r requirements-dev.txt
      script: git reset --soft ${TRAVIS_COMMIT_RANGE%...*} && git lint

notifications:
  email: never
