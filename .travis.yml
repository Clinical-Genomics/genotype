language: python

cache: pip

jobs:
  include:
    - name: "Coverage"
      install:
        - pip install cython
        - pip install . -r requirements-dev.txt
      script: coverage run --branch --omit="*.html" --source "$(basename "$PWD")" setup.py test
      after_success: coveralls

    - name: "Tests on python 3.6 (Clinical-db)"
      if: type = pull_request
      python: "3.6.2"   # version in prod170926
      install:
        - pip install cython
        - pip install . -r requirements-dev.txt
      script: pytest

    - name: "Tests on python 3.7 (Hasta)"
      if: type = pull_request
      python: "3.7.1"   # version in P_main
      install:
        - pip install cython
        - pip install . -r requirements-dev.txt
      script: pytest

    - name: "Package install"
      if: type = pull_request
      install: python setup.py install
      script: pip check

    - name: "Development dependencies"
      if: type = pull_request
      install:
        - pip install cython
        - pip install . -r requirements-dev.txt
      script: pip check

    - name: "Production dependencies on python 3.6 (Clinical-db)"
      if: type = pull_request
      python: "3.6.2"             # version in prod170926
      install:
        - pip install pip==20.0.2  # pip version in P_genotype
        - pip install cython
        - pip install .
      script: pip check

    - name: "Production dependencies on python 3.7 (Hasta)"
      if: type = pull_request
      python: "3.7.1"           # version in P_main
      install:
        - pip install pip==18.1  # pip version in P_main
        - pip install cython
        - pip install .
      script: pip check

    - name: "Code formatting"
      if: type = pull_request
      install: pip install black
      script: git --no-pager diff --name-only --diff-filter=AM $TRAVIS_COMMIT_RANGE | grep -F ".py" | xargs black --check -l 100

    - name: "Pylint score"
      if: type = pull_request
      install: pip install pylint . -r requirements-dev.txt
      script: bash <(curl https://raw.githubusercontent.com/Clinical-Genomics/snippets/master/check_pylint_score.sh)

    - name: "Linting"
      if: type = pull_request
      install: pip install . -r requirements-dev.txt
      script: git reset --soft ${TRAVIS_COMMIT_RANGE%...*} && git lint

notifications:
  email:
    if: branch = master AND NOT type = push
    on_success: never
    on_failure: always
